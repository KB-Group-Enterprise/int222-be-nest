# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Publisher {
  publisherId: Int!
  publisherName: String!
}

type GameImage {
  name: String!
}

type Retailer {
  retailerId: Int!
  retailerName: String!
}

type Game {
  gameId: Int!
  gameName: String!
  basePrice: Float!
  description: String!
  publisher: Publisher!
  categories: [Category!]!
  retailers: [Retailer!]!
  images: [GameImage!]!
}

type Category {
  categoryId: Int!
  categoryName: String!
}

type DeleteGameOutput {
  gameId: Int!
  status: String!
}

type Car {
  id: String!
  name: String!
  price: Float!
  gas: String!
}

type RestoreQuestion {
  questionId: Float!
  question: String!
}

type Role {
  roleId: Int!
  roleName: String!
}

type User {
  userId: String!
  username: String!
  role: Role!
  question: RestoreQuestion!
  profileImageName: String
}

type ImageOutPut {
  url: String!
}

type ResponseStatus {
  status: Int!
  message: String!
}

type Review {
  reviewId: Int!
  rating: Float!
  comment: String!
  reviewer: User!
  game: Game!
}

type Vote {
  voteId: Int!
  isUpvote: Int!
  review: Review!
  user: User!
}

type Query {
  cars: [Car!]!
  car(id: String!): Car!
  game(gameId: Int!): Game!
  games: [Game!]!
  user(username: String!): User!
  questions: [RestoreQuestion!]!
  users: [User!]!
  reviews: [Review!]!
  review(id: Int!): Review!
  votes: [Vote!]!
}

type Mutation {
  addCar(newCarData: NewCarInput!): Car!
  updateCar(updatedCarData: UpdateCarInput!): Car!
  deleteCar(deleteCarData: DeleteCarInput!): Car!
  addGame(newGameData: NewGameInput!): Game!
  addGameWithImages(files: Upload!, newGameData: NewGameInput!): Game!
  updateGameWithImages(files: [Upload!]!, newGameData: UpdateGameInput!): Game!
  updateGame(updateGameData: UpdateGameInput!): Game!
  deleteGame(deleteGameData: DeleteGameInput!): DeleteGameOutput!
  login(credential: CredentialInput!): String!
  register(registerData: RegisterInput!): String!
  refreshToken: Boolean!
  me: User!
  logout: Boolean!
  forgotPassword(newData: ForgotPasswordInput!): String!
  deleteUser(deleteData: DeleteUserInput!): Boolean!
  uploadProfileImage(file: Upload!): ImageOutPut!
  uploadMultiple(files: [Upload!]!): [String!]!
  test: String!
  createReview(createReviewInput: CreateReviewInput!): Review!
  updateReview(updateReviewInput: UpdateReviewInput!): Review!
  deleteReview(id: Int!): ResponseStatus!
  createVote(createVoteInput: CreateVoteInput!): Vote!
  updateVote(updateVoteInput: UpdateVoteInput!): Vote!
  deleteVote(id: Int!): ResponseStatus!
}

input NewCarInput {
  name: String!
  price: Int!
  gas: String
}

input UpdateCarInput {
  id: String!
  name: String!
  price: Float!
  gas: String!
}

input DeleteCarInput {
  id: String!
}

input NewGameInput {
  gameName: String!
  basePrice: Float!
  description: String!
  publisher: PublisherInput!
  categories: [CategoryInput!]!
  retailers: [RetailerInput!]!
}

input PublisherInput {
  publisherId: Int!
  publisherName: String!
}

input CategoryInput {
  categoryId: Int!
  categoryName: String!
}

input RetailerInput {
  retailerId: Int!
  retailerName: String!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input UpdateGameInput {
  gameName: String
  basePrice: Float
  description: String
  publisher: PublisherInput
  categories: [CategoryInput!]
  retailers: [RetailerInput!]
  gameId: Int!
}

input DeleteGameInput {
  gameId: Int!
}

input CredentialInput {
  username: String!
  password: String!
}

input RegisterInput {
  username: String!
  password: String!
  confirmPassword: String!
  questionId: Float!
  restoreAnswer: String!
}

input ForgotPasswordInput {
  username: String!
  userId: String!
  restoreAnswer: String!
  newPassword: String!
}

input DeleteUserInput {
  userId: String!
}

input CreateReviewInput {
  rating: Int!
  comment: String!
  userId: String!
  gameId: Float!
}

input UpdateReviewInput {
  rating: Int
  comment: String
  userId: String
  gameId: Float
  reviewId: Int!
}

input CreateVoteInput {
  reviewId: Int!
  userId: String!
  isUpvote: Int!
}

input UpdateVoteInput {
  reviewId: Int
  userId: String
  isUpvote: Int
  voteId: Int!
}
