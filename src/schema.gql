# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Publisher {
  publisherId: Int!
  publisherName: String!
}

type RestoreQuestion {
  questionId: Float!
  question: String!
}

type Role {
  roleId: Int!
  roleName: String!
}

type User {
  userId: String!
  username: String!
  role: Role!
  question: RestoreQuestion!
  profileImageName: String
}

type Vote {
  voteId: Int!
  isUpvote: Int!
  review: Review!
  user: User!
}

type Review {
  reviewId: Int!
  rating: Float!
  comment: String!
  reviewer: User!
  game: Game!
  votes: [Vote!]!
}

type GameImage {
  name: String!
}

type Retailer {
  retailerId: Int!
  retailerName: String!
}

type Game {
  gameId: Int!
  gameName: String!
  basePrice: Float!
  description: String!
  publisher: Publisher!
  categories: [Category!]!
  retailers: [Retailer!]!
  images: [GameImage!]!
  rating: Int
  reviews: [Review!]!
  releaseDate: String!
}

type Category {
  categoryId: Int!
  categoryName: String!
}

type DeleteOutput {
  id: Int!
  status: String!
}

type DeleteGameOutput {
  gameId: Int!
  status: String!
}

type GamePaginationOutput {
  items: [Game!]!
  meta: GamePaginaionMeta!
}

type GamePaginaionMeta {
  itemCount: Int!
  totalItems: Int
  itemsPerPage: Int!
  totalPages: Int
  currentPage: Int!
}

type ImageOutPut {
  imageName: String!
}

type RestoreQuestionOutput {
  userId: String!
  question: RestoreQuestion!
}

type ResponseStatus {
  status: Int!
  message: String!
}

type Query {
  game(gameId: Int!): Game!
  gameWithReviews(gameId: Int!): Game!
  games: [Game!]!
  searchGames(gameName: String!): [Game!]!
  paginateGames(limit: Int!, page: Int!, filterBy: [String!], filter: [String!], sortBy: String, order: String): GamePaginationOutput!
  categories: [Category!]!
  category(categoryId: Int!): Category!
  publishers: [Publisher!]!
  publisher(publisherId: Int!): Publisher!
  retailers: [Retailer!]!
  retailer(retailerId: Int!): Retailer!
  user(username: String!): User!
  questions: [RestoreQuestion!]!
  users: [User!]!
  reviews: [Review!]!
  review(id: Int!): Review!
  reviewByGameId(id: Int!): [Review!]!
  votes: [Vote!]!
}

type Mutation {
  addGame(newGameData: NewGameInput!): Game!
  addGameWithImages(files: [Upload!]!, newGameData: NewGameInput!): Game!
  updateGameWithImages(files: [Upload!]!, newGameData: UpdateGameInput!): Game!
  updateGame(updateGameData: UpdateGameInput!): Game!
  deleteGame(gameId: Int!): DeleteGameOutput!
  addCategory(addCategoryData: NewCategoryInput!): Category!
  updateCategory(updateCategoryData: CategoryInput!): Category!
  deleteCategory(categoryId: Int!): DeleteOutput!
  addPublisher(addPublisherData: NewPublisherInput!): Publisher!
  updatePublisher(updatePublisherData: PublisherInput!): Publisher!
  deletePublisher(publisherId: Int!): DeleteOutput!
  addRetailer(addRetailerData: NewRetailerInput!): Retailer!
  updateRetailer(updateRetailerData: RetailerInput!): Retailer!
  deleteRetailer(retailerId: Int!): DeleteOutput!
  login(credential: CredentialInput!): String!
  register(registerData: RegisterInput!): String!
  refreshToken: Boolean!
  me: User!
  logout: Boolean!
  forgotPassword(newData: ForgotPasswordInput!): String!
  deleteUser(deleteData: DeleteUserInput!): Boolean!
  uploadProfileImage(file: Upload!): ImageOutPut!
  updateRole(updateRoleData: UpdateRoleInput!): Boolean!
  getRestoreQuestion(username: String!): RestoreQuestionOutput!
  createReview(createReviewInput: CreateReviewInput!): Review!
  updateReview(updateReviewInput: UpdateReviewInput!): Review!
  deleteReview(id: Int!): ResponseStatus!
  createVote(createVoteInput: CreateVoteInput!): Vote!
  updateVote(updateVoteInput: UpdateVoteInput!): Vote!
  deleteVote(id: Int!): ResponseStatus!
}

input NewGameInput {
  gameName: String!
  basePrice: Float!
  description: String!
  publisher: PublisherInput!
  categories: [CategoryInput!]!
  retailers: [RetailerInput!]!
  releaseDate: String!
}

input PublisherInput {
  publisherId: Int!
  publisherName: String!
}

input CategoryInput {
  categoryId: Int!
  categoryName: String!
}

input RetailerInput {
  retailerId: Int!
  retailerName: String!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input UpdateGameInput {
  gameName: String
  basePrice: Float
  description: String
  publisher: PublisherInput
  categories: [CategoryInput!]
  retailers: [RetailerInput!]
  releaseDate: String
  gameId: Int!
}

input NewCategoryInput {
  categoryName: String!
}

input NewPublisherInput {
  publisherName: String!
}

input NewRetailerInput {
  retailerName: String!
}

input CredentialInput {
  username: String!
  password: String!
}

input RegisterInput {
  username: String!
  password: String!
  confirmPassword: String!
  questionId: Float!
  restoreAnswer: String!
}

input ForgotPasswordInput {
  username: String!
  userId: String!
  restoreAnswer: String!
  newPassword: String!
}

input DeleteUserInput {
  userId: String!
}

input UpdateRoleInput {
  userId: String!
  role: String!
}

input CreateReviewInput {
  rating: Int!
  comment: String!
  userId: String!
  gameId: Float!
}

input UpdateReviewInput {
  rating: Int
  comment: String
  userId: String
  gameId: Float
  reviewId: Int!
}

input CreateVoteInput {
  reviewId: Int!
  userId: String!
  isUpvote: Int!
}

input UpdateVoteInput {
  reviewId: Int
  userId: String
  isUpvote: Int
  voteId: Int!
}
